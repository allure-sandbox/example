name: Java

on:
  workflow_dispatch:
    inputs:
      ALLURE_JOB_RUN_ID:
        description: ALLURE_JOB_RUN_ID - service parameter (leave blank)
        required: false
      ALLURE_USERNAME:
        description: ALLURE_USERNAME - service parameter (leave blank)
        required: false
      BRANCH:
        description: Branch
        required: false
        default: master
      BROWSER:
        description: Browser
        required: false
        default: Chrome
      ENDPOINT:
        description: Endpoint
        required: false
        default: sandbox.testops.cloud
      OS:
        description: OS
        required: false
        default: macOS
      VERSION:
        description: Version
        required: false
        default: 5.0.1

env:
  ALLURE_ENDPOINT: https://sandbox.testops.cloud/
  ALLURE_PROJECT_ID: 35
  ALLURE_TOKEN: ${{ secrets.ALLURE_TOKEN }}
  ALLURE_JOB_RUN_ID: ${{ github.event.inputs.ALLURE_JOB_RUN_ID }}
  ALLURE_TESTPLAN_PATH: "./testplan.json"
  ALLURE_RESULTS: "build/allure-results"

jobs:
  all-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: install and configure allurectl
        uses: allure-framework/setup-allurectl@v1
        with:
          allure-endpoint: https://sandbox.testops.cloud/
          allure-token: ${{ secrets.ALLURE_TOKEN }}
          allure-project-id: ${{ secrets.ALLURE_PROJECT_ID }}
      - name: Prepare TestPlan
        run: allurectl job-run plan --output-file ${ALLURE_TESTPLAN_PATH}
      - name: Build with Gradle
        run: | 
          allurectl watch -- ./gradlew clean test
          export $( allurectl job-run env)
          printenv | grep TEST_
          printenv | grep ALLURE_
        env:
          ENDPOINT: ${{ github.event.inputs.ENDPOINT }}
          BROWSER: ${{ github.event.inputs.BROWSER }}
      - name: Get ALLURE_ environments just to check
        run: | 
          printenv | grep ALLURE_
      - name: Get GITHUB_ environments just to check
        run: | 
          printenv | grep GITHUB_
